<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:PC_Client.Styles">
    
    <!-- Start: Button | Minimize | Maximize | Close -->
    <Style x:Key="IconButtonsStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="bd" CornerRadius="5" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Path Name="ico" Data="{TemplateBinding Content}" Fill="{DynamicResource ActionIconColor}" Height="10" Width="10" Stretch="Uniform"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource SecundaryBackgroundColor}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="Tag" Value="IsCloseButton"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="#F72626"/>
                            <Setter TargetName="ico" Property="Fill" Value="{DynamicResource PrimaryBackgroundColor}"/>
                        </MultiTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ico" Property="Fill" Value="{DynamicResource PrimaryBackgroundColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- End: Button | Minimize | Maximize | Close -->

    <!-- Start: Menu Icon -->
    <Style x:Key="MenuIconStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <Viewbox Height="20" Width="20" Margin="0 6 0 0" Stretch="UniformToFill">
                            <Canvas Height="512" Width="512">
                                <Path x:Name="ico" Data="m32 0h448c17.671875 0 32 14.328125 32 32s-14.328125 32-32 32h-448c-17.671875 0-32-14.328125-32-32s14.328125-32 32-32zm0 0" Fill="{DynamicResource PrimaryGrayColor}" Margin="0 0 0 0"/>
                                <Path x:Name="ico1" Data="m32 128h448c17.671875 0 32 14.328125 32 32s-14.328125 32-32 32h-448c-17.671875 0-32-14.328125-32-32s14.328125-32 32-32zm0 0" Fill="{DynamicResource PrimaryGrayColor}" Margin="0 20 0 0"/>
                                <Path x:Name="ico2" Data="m32 256h448c17.671875 0 32 14.328125 32 32s-14.328125 32-32 32h-448c-17.671875 0-32-14.328125-32-32s14.328125-32 32-32zm0 0" Fill="{DynamicResource PrimaryGrayColor}" Margin="0 40 0 0"/>
                            </Canvas>
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="Transparent"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFFFFF"/>
                            <Setter Property="Fill" TargetName="ico" Value="{DynamicResource PrimaryBlueColor}"/>
                            <Setter Property="Fill" TargetName="ico1" Value="{DynamicResource PrimaryBlueColor}"/>
                            <Setter Property="Fill" TargetName="ico2" Value="{DynamicResource PrimaryBlueColor}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="border" Value="Transparent"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFFFFF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- End: Menu Icon -->

    <!-- Start: VerticalMenuStyle -->
    <Style x:Key="MenuRadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryGrayColor}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="menuButton"  Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="30"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Image Grid.Row="0"
                                   Grid.Column="0"
                                   Source="/Views/phone.png"
                                   HorizontalAlignment="Center"/>

                            <!-- Selected  -->
                            <Border x:Name="btnSelected" Grid.ColumnSpan="2" Width="210" HorizontalAlignment="Right"/>

                            <!-- Text -->
                            <TextBlock x:Name="txtName" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0 0 0 0"
                                        Grid.Column="1" Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}"
                                        FontWeight="{TemplateBinding FontWeight}"
                                        FontSize="{TemplateBinding FontSize}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="txtName" Property="Foreground" Value="{DynamicResource PrimaryBlueColor}"/>
                            <!--<Setter TargetName="Icon" Property="Fill" Value="{DynamicResource PrimaryBlueColor}"/>-->
                           <!-- Optional 
                            <Setter TargetName="Indicator" Property="Fill" Value="red"/>
                            <Setter TargetName="Indicator" Property="Height" Value="20"/>-->
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <!--<Setter TargetName="Icon" Property="Fill" Value="{DynamicResource PrimaryBlueColor}"/>-->
                            <!--<Setter TargetName="Indicator" Property="Fill" Value="{DynamicResource PrimaryBlueColor}"/>-->
                            <!--<Setter TargetName="Indicator" Property="Height" Value="20"/>-->
                            <Setter TargetName="btnSelected" Property="Background" Value="{DynamicResource SecundaryGrayColor}"/>
                            <Setter TargetName="txtName" Property="Foreground" Value="{DynamicResource PrimaryBlueColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BottomRadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryGrayColor}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="menuButton"  Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="30"/>
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>

                            <!-- Selected  -->
                            <Border x:Name="btnSelected" Grid.ColumnSpan="2" Width="210" HorizontalAlignment="Right"/>
                            <TextBlock x:Name="txtName" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="12 0 0 0"
                                                Grid.Column="1" Text="{TemplateBinding Content}" 
                                                TextAlignment="Center"
                                                Foreground="{TemplateBinding Foreground}"
                                                FontWeight="{TemplateBinding FontWeight}"
                                                FontSize="{TemplateBinding FontSize}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="txtName" Property="Foreground" Value="{DynamicResource PrimaryBlueColor}"/>
                            <!--<Setter TargetName="Icon" Property="Fill" Value="{DynamicResource PrimaryBlueColor}"/>-->
                            <!-- Optional 
                            <Setter TargetName="Indicator" Property="Fill" Value="red"/>
                            <Setter TargetName="Indicator" Property="Height" Value="20"/>-->
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <!--<Setter TargetName="Icon" Property="Fill" Value="{DynamicResource PrimaryBlueColor}"/>-->
                            <!--<Setter TargetName="Indicator" Property="Fill" Value="{DynamicResource PrimaryBlueColor}"/>-->
                            <!--<Setter TargetName="Indicator" Property="Height" Value="20"/>-->
                            <Setter TargetName="btnSelected" Property="Background" Value="{DynamicResource SecundaryGrayColor}"/>
                            <Setter TargetName="txtName" Property="Foreground" Value="{DynamicResource PrimaryBlueColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- End: VerticalMenuStyle -->

    <!--<Style TargetType="{x:Type Toggle}">

        <Setter Property="MaxHeight" Value="30"/>
        <Setter Property="MaxWidth" Value="60"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="MinWidth" Value="60"/>

        <Setter Property="Template">


            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Switch}">
                    <Border x:Name="bk" Background="#FFD1D1D1" CornerRadius="15">
                        <Ellipse x:Name="ep" Fill="#FFE6FF4B" HorizontalAlignment="Left" Margin="4" Width="22"></Ellipse>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="ep" Property="HorizontalAlignment" Value="Right"/>
                            <Setter Property="Background" TargetName="bk" Value="#FF14DE54"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
</ResourceDictionary>